Код, определяющий какой тип объекта создать,
с условными операторами из клиентской части переезжает
в фабричный метод, находящийся в обособленном классе.

Для чего это делать?
Проблема возникает при добавлении новых субклассов - все места
в клиентском коде, где создаются объекты приходится модифицировать
(менять кучу if-ов и else-ов), нарушаются принципы проектирования.
Код должен быть открытым для расширения и закрытым для модификации.

Поэтому полномочия по созданию объектов делегируются фабричному методу
и в случае если появляются новые субклассы
продуктов, то мы можем унаследоваться от фабрики и
переопределить фабричный метод на наше усмотрение.

Фактически в коде мы просто отделяем
изменяемые части от неизменяемых.